using System.Collections;
using UnityEngine;
using UnityEngine.Networking;
using UnityEngine.SceneManagement;
using TMPro;

public class PoseManager : MonoBehaviour
{
    private string apiUrl = "http://127.0.0.1:17069/out_of_reality_api/poses/export";

    public void GetAllPoses()
    {
        StartCoroutine(GetPoses());
    }

    IEnumerator GetPoses()
    {
        string accessToken = PlayerPrefs.GetString("ACCESS_TOKEN");
        using (UnityWebRequest www = UnityWebRequest.Get(apiUrl))
        {
            www.downloadHandler = new DownloadHandlerBuffer();
            www.SetRequestHeader("Authorization", "Bearer " + accessToken);
            yield return www.SendWebRequest();

            if (www.result == UnityWebRequest.Result.Success)
            {
                string jsonResponse = www.downloadHandler.text;
                PoseData poseData = JsonUtility.FromJson<PoseData>(jsonResponse);

                if (poseData.success)
                {
                    Debug.Log($"Received {poseData.total_poses} poses\n");

                    foreach (var pose in poseData.poses)
                    {
                        string log = $"--- Pose: {pose.name} (ID: {pose.id}) ---\n" +
                                    $"Description: {pose.description}\n" +
                                    $"Require Feet on Ground: {pose.require_feet_on_ground}\n" +
                                    $"Foot Tolerance Y: {pose.foot_tolerance_y}\n" +
                                    $"Active: {pose.active}\n" +
                                    $"Angle Requirements ({pose.angle_requirements.Count}):";

                        foreach (var angle in pose.angle_requirements)
                        {
                            log += $"\n  * {angle.angle} â†’ Min: {angle.min_angle}, Max: {angle.max_angle}, Description: {angle.description}";
                        }

                        Debug.Log(log);
                    }
                }
                else
                {
                    Debug.LogError($"API Error: {poseData.message}");
                }
            }
            else
            {
                Debug.LogError("HTTP Error: " + www.error);
            }
        }
    }
}